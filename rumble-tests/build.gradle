apply plugin: 'java'

evaluationDependsOn(':Sample-App')

dependencies {
    def androidModule = project(':Sample-App')
    compile androidModule

    testCompile androidModule.android.applicationVariants.toList().first().javaCompile.classpath
    testCompile androidModule.android.applicationVariants.toList().first().javaCompile.outputs.files
    testCompile files(androidModule.plugins.findPlugin("com.android.application").getBootClasspath())

//    testCompile 'junit:junit:4.11'
    testCompile 'org.robolectric:robolectric:2.4'
    testCompile 'org.assertj:assertj-core:1.7.1'
}

//This rule is to prevent iOExceptions "superclass not present"
tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"
}

